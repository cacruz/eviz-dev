name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    container: continuumio/miniconda3:latest

    steps:
    - uses: actions/checkout@v4

    - name: Download upload-artifact@v3
      uses: actions/upload-artifact@v3
      with:
        name: dummy
        path: README.md
        if-no-files-found: ignore

    - name: Cache conda environment
      uses: actions/cache@v4
      with:
        path: /opt/conda/envs/viz
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yaml') }}
        restore-keys: |
          ${{ runner.os }}-conda-

    - name: Setup environment
      run: |
        conda install -n base conda-libmamba-solver -q
        conda config --set solver libmamba
        conda install -n base conda-build
        if ! conda env list | grep -q "viz"; then
          conda env create -f environment.yaml
        fi

    - name: Run tests
      run: |
        eval "$(conda shell.bash hook)"
        conda activate viz
        pytest --color=yes tests

  build-docs:
    runs-on: ubuntu-latest
    container: continuumio/miniconda3:latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4

      - name: Download upload-artifact@v3
        uses: actions/upload-artifact@v3
        with:
          name: dummy
          path: README.md
          if-no-files-found: ignore

#      - name: Cache conda environment
#        uses: actions/cache@v4
#        with:
#          path: /opt/conda/envs/viz
#          key: ${{ runner.os }}-conda-${{ hashFiles('environment.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-conda-
            
      - name: Setup environment
        run: |
          conda install -n base conda-libmamba-solver -q
          conda config --set solver libmamba
          conda install -n base conda-build
          if ! conda env list | grep -q "viz"; then
            conda env create -f environment.yaml
          fi
          
      - name: Build documentation
        run: |
          eval "$(conda shell.bash hook)"
          conda activate viz
          sphinx-build -b html docs public

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: public
          retention-days: 7

  deploy-pages:
    needs: build-docs
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      actions: read     # to download artifacts from previous jobs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./public
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
